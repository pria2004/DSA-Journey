2485. Find the Pivot Integer

    Difficulty Level --> Easy

PROBLEM DESCRIPTION: 
    Given a positive integer n, find the pivot integer x such that:
    The sum of all elements between 1 and x inclusively equals the sum of all elements between x and n inclusively.
    Return the pivot integer x. If no such integer exists, return -1. 
    It is guaranteed that there will be at most one pivot index for the given input.

EXAMPLEE 1
Input: n = 8
Output: 6
Explanation: 6 is the pivot integer since: 1 + 2 + 3 + 4 + 5 + 6 = 6 + 7 + 8 = 21.

EXAMPLE 2
Input: n = 1
Output: 1
Explanation: 1 is the pivot integer since: 1 = 1.

EXAMPLE 3
Input: n = 4
Output: -1
Explanation: It can be proved that no such integer exist.

CONSTRAINTS:
1 <= n <= 1000


SOLUTION:
</CODE USING JAVA>

// Actual Code starts from the next line

class Solution {
    public int pivotInteger(int n) {
        for(int i=1;i<=n;i++){
            int count1=0;
            int count2=0;
            for(int j=1;j<=i;j++){
                count1+=j;
            }
            for(int k=i;k<=n;k++){
                count2+=k;
            }
            if(count1==count2){
                return i;
            }
        }
        return -1;
    }
}
