100. Same Tree

    Difficulty Level --> Easy

PROBLEM DESCRIPTION: 
     Given the roots of two binary trees p and q, write a function to check if they are the same or not.
     Two binary trees are considered the same if they are structurally identical, and the nodes have the same value.

EXAMPLE 1:
Input: p = [1,2,3], q = [1,2,3]
Output: true

EXAMPLE 2:
Input: p = [1,2], q = [1,null,2]
Output: false

EXAMPLE 3:
Input: p = [1,2,1], q = [1,1,2]
Output: false

CONSTRAINTS:
The number of nodes in both trees is in the range [0, 100].
-104 <= Node.val <= 104


SOLUTION:
</CODE USING JAVA>

// Actual Code starts from the next line

class Solution {
    public boolean isSameTree(TreeNode p, TreeNode q) {
        if (p==null && q==null){
            return true;
        }
        if(p==null || q==null){
            return false;
        }
        return (p.val==q.val) && isSameTree(p.right,q.right) && isSameTree(p.left,q.left);
    }
}
