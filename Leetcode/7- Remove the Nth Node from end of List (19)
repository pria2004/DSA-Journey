19. Remove the Nth Node from the end of the List

    Difficulty Level --> Medium

PROBLEM DESCRIPTION: 
     Given the head of a linked list, remove the nth node from the end of the list and return its head.

EXAMPLE 1:
Input: head = [1,2,3,4,5], n = 2
Output: [1,2,3,5]

EXAMPLE 2
Input: head = [1], n = 1
Output: []

EXAMPLE 3
Input: head = [1,2], n = 1
Output: [1]
 

CONSTRAINTS:
The number of nodes in the list is sz.
1 <= sz <= 30
0 <= Node.val <= 100
1 <= n <= sz

SOLUTION:
</CODE USING JAVA>

// Actual Code starts from the next line

class Solution {
    public ListNode removeNthFromEnd(ListNode head, int n) {
        
        int len=FindLength(head);
        ListNode curr=head;
        ListNode prev=null;
        int itr=len-n;
        if(itr==0) return head.next;
        for(int i=0;i<itr;i++){
            prev=curr;
            curr=curr.next;
        }
        prev.next = curr.next;
        curr=null;
        return head;
    }
    public int FindLength(ListNode head){
            int c=0;
            ListNode curr=head;
            if(curr==null){
                return c;
            }
            while(curr!=null){
                c++;
                curr=curr.next;
            }
            return c;
        }
}
