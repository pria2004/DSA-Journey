930. Binary Sub Arrays with Sum

    Difficulty Level --> Medium

PROBLEM DESCRIPTION: 
     Given a binary array nums and an integer goal, return the number of non-empty subarrays with a sum goal.
     A subarray is a contiguous part of the array.
 
EXAMPLE 1:
Input: nums = [1,0,1,0,1], goal = 2
Output: 4
Explanation: The 4 subarrays are bolded and underlined below:
[1,0,1,0,1]
[1,0,1,0,1]
[1,0,1,0,1]
[1,0,1,0,1]

EXAMPLE 2:
Input: nums = [0,0,0,0,0], goal = 0
Output: 15
 
CONSTRAINTS:
1 <= nums.length <= 3 * 104
nums[i] is either 0 or 1.
0 <= goal <= nums.length


SOLUTION:
</CODE USING JAVA>

// Actual Code starts from the next line

class Solution {
    public int numSubarraysWithSum(int[] nums, int goal) {
        int count=0;
        for(int i=0;i<nums.length;i++){
            int sum =nums[i];
            if(sum==goal){
                count++;
            }
            for(int j=i+1;j<nums.length;j++){
                sum+=nums[j];
                if(sum==goal){
                    count++;
                }
            }
        }
        return count;
    }
}
