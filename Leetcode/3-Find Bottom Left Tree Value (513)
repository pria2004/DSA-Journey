513. Find Bottom Left Value

    Difficulty Level --> Medium

PROBLEM DESCRIPTION: 
     Given the root of a binary tree, return the leftmost value in the last row of the tree.

EXAMPLE 1:
Input: root = [2,1,3]
Output: 1

EXAMPLE 2
Input: root = [1,2,3,4,null,5,6,null,null,7]
Output: 7


CONSTRAINTS:
The number of nodes in the tree is in the range [1, 104].
-231 <= Node.val <= 231 - 1

SOLUTION:
</CODE USING JAVA>

// Actual Code starts from the next line

public class Solution {
    public int findBottomLeftValue(TreeNode root) {
        int last = 0;
        Queue<TreeNode> q = new LinkedList<>();
        q.add(root);

        while (!q.isEmpty()) {
            int count = q.size();
            for (int i = 0; i < count; i++) {
                TreeNode curr = q.poll();
                if (i == 0)
                    last = curr.val;  // last leftMost val
                if (curr.left != null)
                    q.add(curr.left);
                if (curr.right != null)
                    q.add(curr.right);
            }
        }
        return last;
    }
}
